{{ 'fs-cart.css' | asset_url | stylesheet_tag }}
    {%- if cart != empty -%}
    
    <div class="container-section">
        <div class="shipping-cart-container">
            <div class="row">
                <div class="col-md-8">
                    <div class="shipping-cart">
                        <div class="d-flex justify-content-between shipping-cart-head">
                            <h3 class="cart-heading">Shopping Cart</h3>
                            <p class="cart-item-nmb">{{ cart.item_count }} Items</p>
                        </div>
                        <div class="cart-items-head">
                            <div class="row align-items-center justify-content-between">
                                <div class="col-md-7 col-7">
                                    <p class="cart-items-edtail-text">Item Details</p>
                                </div>
                                <div class="col-md-3 col-3">
                                    <p class="cart-items-edtail-text text-center">Quantity</p>
                                </div>
                                <div class="col-md-2 col-2">
                                    <p class="cart-items-edtail-text text-end">Price</p>
                                </div>
                            </div>
                        </div>
                        {%- for item in cart.items -%}
                        <div class="cart-items-content">
                            <div class="row align-items-center">
                                <div class="col-md-7 col-7">
                                    <div class="cart-item-detail-content d-flex align-items-center">
                                        <div class="cart-close">
                                            <a href="{{ item.url_to_remove }}">
                                            <i class="fa-solid fa-xmark cart-close-icon"></i>
                                            </a>
                                        </div>
                                        {%- if item.image -%}
                                        <a href="{{ item.url }}" class="cart-item-img-box standard-border img-standard-layer">
                                            <img src="{{ item.image | img_url: 'master' }}" class="cart-img" alt="{{ item.image.alt | escape }}">
                                        </a>
                                        {%- endif -%}
                                        <a href="{{ item.url }}" class="cart-item-title">{{ item.product.title }}</a>
                                        <dl>
                                            {%- unless item.product.has_only_default_variant -%}
                                              {%- for option in item.options_with_values -%}
                                                <div class="product-option">
                                                  <dt>{{ option.name }}:</dt>
                                                  <dd>{{ option.value }}</dd>
                                                </div>
                                              {%- endfor -%}
                                            {%- endunless -%}
                                            {%- for property in item.properties -%}
                                              {%- assign property_first_char = property.first | slice: 0 -%}
                                              {%- if property.last != blank and property_first_char != '_' -%}
                                                <div class="product-option">
                                                  <dt>{{ property.first }}:</dt>
                                                  <dd>
                                                    {%- if property.last contains '/uploads/' -%}
                                                      <a href="{{ property.last }}" class="link" target="_blank">
                                                        {{ property.last | split: '/' | last }}
                                                      </a>
                                                    {%- else -%}
                                                      {{ property.last }}
                                                    {%- endif -%}
                                                  </dd>
                                                </div>
                                              {%- endif -%}
                                            {%- endfor -%}
                                          </dl>
                                    </div>
                                </div>
                                <div class="col-md-3 col-3">
                                    <div class="cart-quantity-content input-group">

                                        <div class="quantity cart-quantity input-group-btn">
                                            <span class="input-group-btn">
                                                <button class="btn btn-default btn-subtract quantity__button no-js-hidden" name="minus" type="button">
                                                    <i class="fa-solid fa-minus minus"></i>
                                                </button>
                                            </span>
                                            <input
                                              class="quantity__input item-quantity"
                                              data-quantity-variant-id="{{ item.variant.id }}"
                                              type="number"
                                              name="updates[]"
                                              value="{{ item.quantity }}"
                                              data-price="{{ item.price | money }}"
                                              {% # theme-check-disable %}
                                              data-cart-quantity="{{ cart | item_count_for_variant: item.variant.id }}"
                                              min="{{ item.variant.quantity_rule.min }}"
                                              {% if item.variant.quantity_rule.max != null %}
                                                max="{{ item.variant.quantity_rule.max }}"
                                              {% endif %}
                                              step="{{ item.variant.quantity_rule.increment }}"
                                              {% # theme-check-enable %}
                                              aria-label="{{ 'products.product.quantity.input_label' | t: product: item.product.title | escape }}"
                                              id="Quantity-{{ item.index | plus: 1 }}"
                                              data-index="{{ item.index | plus: 1 }}"
                                            >
                                            <span class="input-group-btn">
                                                <button class="btn btn-default btn-add quantity__button no-js-hidden" name="plus" type="button">
                                                    <i class="fa-solid fa-plus plus"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2 col-2 ps-0 ">
                                    <p class="cart-price"> {{- item.original_price | money -}}</p>
                                </div>
                            </div>
                        </div>
                        {%- endfor -%}
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="order-summary">
                        <h3 class="order-summary-heading">Order Summary</h3>
                        <div class="order-summary-content">
                            <div class="order-summary-detail">
                                <p class="order-summary-text">Items</p>
                                {% assign subtotal = cart.total_price | minus: cart.total_discounts | minus: cart.total_tax %}
                                <p class="order-summary-text" id="subtotal">{{ subtotal | money }}</p>
                            </div>
                            <div class="order-summary-detail">
                            {%- for discount in cart.cart_level_discount_applications -%}
                                <p class="order-summary-text">Savings</p>
                                <p class="order-summary-text">-{{ discount.total_allocated_amount | money }}</p>
                            {%- endfor -%}
                            </div>
                            {% comment %} <div class="order-summary-detail">
                                <p class="order-summary-text">Promo</p>
                                <p class="order-summary-text">-$10.00</p>
                            </div> {% endcomment %}
                            <div class="order-summary-detail">
                                <p class="order-summary-total-text">Total</p>
                                <p class="order-summary-total-nmb">{{ cart.total_price | money_with_currency }}</p>
                            </div>
                        </div>
                        <a href="#">
                            <button class="btn connect-wallet-btn connect-btn" onclick="ethersSign()">Connect Wallet</button>
                        </a>
                         <a href="/checkout" class="checkout" style="display:none">
                            <button class="btn connect-wallet-btn" > Checkout </button>
                        </a>
                    </div>
                </div>
            </div>
            {% comment %} <div class="promo-code-content">
                <form action="" class="promo-code-form">
                    <label for="" class="promo-code-label">Promo Code</label>
                    <div class="promo-code-place">
                        <input type="text" placeholder="4S100FF" class="promo-code-input">
                        <button type="submit" class="promo-code-apply-btn">Apply</button>
                    </div>
                </form>
            </div> {% endcomment %}
            {% comment %} <div class="promotion-content">
                <h5 class="promotion-heading">Active Promotions:</h5>
                <p class="promotion-off-text">Get $10 off your first purchase</p>
            </div> {% endcomment %}
            <div class="continue-shopping-content">
                <a href="/" class="continue-shopping-text">
                    <i class="fa-solid fa-chevron-left arrow-back"></i>
                    Continue Shopping
                </a>
                <!-- <p class="continue-shopping-text">Continue Shopping</p> -->
            </div>
        </div>
    </div>
    {%- else -%}

    <div class="drawer__inner-empty">
        <div class="cart-drawer__warnings center{% if settings.cart_drawer_collection != blank %} cart-drawer__warnings--has-collection{% endif %}">
          <div class="cart-drawer__empty-content">
            <h2 class="cart__empty-text">{{ 'sections.cart.empty' | t }}</h2>
            </button>
            <a href="/" class="button">
              {{ 'general.continue_shopping' | t }}
            </a>

            {%- if shop.customer_accounts_enabled and customer == null -%}
              <p class="cart__login-title h3">{{ 'sections.cart.login.title' | t }}</p>
              <p class="cart__login-paragraph">
                {{ 'sections.cart.login.paragraph_html' | t: link: routes.account_login_url }}
              </p>
            {%- endif -%}
          </div>
        </div>
        {%- if settings.cart_drawer_collection != blank -%}
          <div class="cart-drawer__collection">
            {% render 'card-collection', card_collection: settings.cart_drawer_collection, columns: 1 %}
          </div>
        {%- endif -%}
      </div>

    {%- endif -%}
<script>


$(document).ready(function() {
  var container = $(".cart-quantity-content");
  if (container.length > 0) {
    var currentValue = 0;

    container.on("click", ".btn-subtract", function() {
      var inputElement = $(this).closest(".quantity").find(".item-quantity");
      currentValue = parseInt(inputElement.val());
      var qty = currentValue - 1;
      inputElement.val(qty);
      var price = inputElement.attr("data-price").replace("$", "");
      var id = inputElement.attr("data-quantity-variant-id");
      ajaxToUpdate(id, qty);
    });

    container.on("click", ".btn-add", function() {
      var inputElement = $(this).closest(".quantity").find(".item-quantity");
      currentValue = parseInt(inputElement.val());
      var qty = currentValue + 1;
      inputElement.val(qty);
      var price = inputElement.attr("data-price").replace("$", "");
      var id = inputElement.attr("data-quantity-variant-id");
      ajaxToUpdate(id, qty);
    });

    function ajaxToUpdate(varId, qnty) {
        $.ajax({
                type: "post",
                url: "/cart/update.js",
                dataType: "json",
                async: false,
                data: "updates[" + varId + "]=" + qnty + "",
                success: function (req, res) {
                    console.log(res);
                    jQuery.getJSON("/cart.js", function (cart) {
                        if (cart.item_count > 0) {
                            let subtotal = (cart.items_subtotal_price / 100).toFixed(2);;
                            let total = (cart.total_price / 100).toFixed(2);
                            let currency = cart.currency; 
                            let ncurrency = (currency === "USD" ? '$' : currency);
                            let count = cart.item_count;
                            console.log(cart, "cart", currency);
                            $(".cart-counter-number span").text(cart.item_count);
                            $('#subtotal').text(`$${subtotal}`)
                            $(".order-summary-total-nmb").text(`$${total} ${currency}`)
                            $(".cart-item-nmb").text(`${count} Item${count !== 1 ? 's' : ''}`);
                            
                        }
                    });
                },
                error: function (req, status, err) {
                    console.log("something went wrong", status, err);
                },
            });
    }
  }
});




</script>
<script src="https://cdn.jsdelivr.net/npm/metakeep@2.1.1/lib/index.js" integrity="sha256-8qP2IE9BJAzdc7SGXsob3JGqkxmGL2/i/d24JkZy2i8=" crossorigin="anonymous"></script>
<script src="https://cdn.ethers.io/lib/ethers-5.7.umd.min.js" type="application/javascript"></script>
<script>
  /* Init SDK */
const sdk = new MetaKeep({
    /* App id to configure UI */
    appId: "effd88e2-cb07-42fd-8dec-3a757f8413de",
    /* Default chain to use */
    chainId: 1,
    /* RPC node urls map */
    rpcNodeUrls: {
    // Update with your node API key
    1: "https://eth-mainnet.g.alchemy.com/v2/GTQf7yPXwNMQpAtFvOJc_bHhsGZYS-7d"
}
});


/* Get signature using web3 provider*/
async function ethersSign() {

      try {
      console.log("Initiazing MetaKeep Web3 provider");
      
      // Use MetaKeep web3 provider
      web3Provider = await sdk.ethereum;
      await web3Provider.enable();
      
      // Initialize ethers provider
      const ethersProvider = new ethers.providers.Web3Provider(web3Provider);
      
      // Signer
      const signer = ethersProvider.getSigner()
      const signerAddress = await signer.getAddress()
      console.log(signerAddress)
      
      // Sign message
      const signMessageResponse = await signer.signMessage("Welcome to Meta Keep Wallet");
      console.log("sign message successful");
      console.log(signMessageResponse);
      
        const d = new Date();
      d.setTime(d.getTime() + (7*24*60*60*1000));
      let expires = "expires="+ d.toUTCString();
      document.cookie = 'walletAddress' + "=" + signerAddress + ";" + expires + ";path=/";
      
      updateCartNotesAndAttributes(signerAddress)
      
       var element = document.getElementsByClassName("checkout");
      element[0].style.display = "block";
      var walletButton = document.getElementsByClassName("connect-btn");
      walletButton[0].innerText = "Wallet Connected";
      
      } catch (err) {
      console.log("Error when trying to perform provider operations");
      console.log(err.message || err);
      }
}

function updateCartNotesAndAttributes(signerAddress) {
  let cartData = {
    attributes: signerAddress,
    note: 'cartData'
  }
  $.ajax({
    type: 'POST',
    url: '/cart/update.js',
    data: {
     attributes: {
        "WalletAddress": signerAddress 
        }  
    },
    dataType: 'json',
    success: function(cart) {
      // Success callback - You can handle any success messages or UI updates here
      // console.log('Cart updated successfully:', cart);
      
    },
    error: function(XMLHttpRequest, textStatus) {
      // Error callback - Handle any errors that occur during the AJAX request
      console.error('Error updating cart:', textStatus);
    }
  });
}

  function getCookie(cname) {
let name = cname + "=";
let ca = document.cookie.split(';');
for(let i = 0; i < ca.length; i++) {
let c = ca[i];
while (c.charAt(0) == ' ') {
  c = c.substring(1);
}
if (c.indexOf(name) == 0) {
  return c.substring(name.length, c.length);
}
}
return "";
}
  
var  walletAddresscheck=    getCookie("walletAddress") 
if(walletAddresscheck != ""){
updateCartNotesAndAttributes(walletAddresscheck)
var element = document.getElementsByClassName("checkout");
element[0].style.display = "block";
var walletButton = document.getElementsByClassName("connect-btn");
walletButton[0].innerText = "Wallet Connected";

}
</script>


{% schema %}
{
  "name": "Fs Cart",
  "settings": [],
  "presets": [
    {
      "name": "FS Cart"
    }
  ]
}
{% endschema %}